|
| ./fail.py:8: utest failure: <lambda>
|   arg 0 = 0
|   arg 1 = 1
|   arg x = 'x'
|   arg y = 'y'
|   expected value: True
|   returned value: False
|
|
| ./fail.py:9: utest failure: raise_unexpected
|   expected value: True
|   raised exception:   Exception('unexpected')
|     exc arg 0: 'unexpected'
|
| Traceback (most recent call last):
~   File ".+/pithy/utest/__init__.py", line 48, in utest
|     try: ret = fn(*args, **kwargs)
|                ^^^^^^^^^^^^^^^^^^^
|   File "./fail.py", line 6, in raise_unexpected
|     def raise_unexpected(): raise Exception('unexpected')
|                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
| Exception: unexpected
|
|
| ./fail.py:11: utest failure: <lambda>
|   expected exception: Exception('expected')
|   returned value: True
|
|
| ./fail.py:12: utest failure: raise_unexpected
|   expected exception: Exception('expected')
|   raised exception:   Exception('unexpected')
|     exc arg 0: 'unexpected'
|
| Traceback (most recent call last):
~   File ".+/pithy/utest/__init__.py", line 81, in utest_exc
|     try: ret = fn(*args, **kwargs)
|                ^^^^^^^^^^^^^^^^^^^
|   File "./fail.py", line 6, in raise_unexpected
|     def raise_unexpected(): raise Exception('unexpected')
|                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
| Exception: unexpected
|
|
| ./fail.py:14: utest failure: raise_unexpected
|   expected sequence: [0]
|   raised exception:   Exception('unexpected')
|     exc arg 0: 'unexpected'
|
| Traceback (most recent call last):
~   File ".+/pithy/utest/__init__.py", line 100, in utest_seq
|     ret_seq = fn(*args, **kwargs)
|               ^^^^^^^^^^^^^^^^^^^
|   File "./fail.py", line 6, in raise_unexpected
|     def raise_unexpected(): raise Exception('unexpected')
|                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
| Exception: unexpected
|
|
| ./fail.py:15: utest failure: range
|   arg 0 = 0
|   expected sequence: [0]
|   returned sequence: []
|
|
| ./fail.py:16: utest failure: <lambda>
|   expected sequence: [0]
|   returned value: 0
|   raised exception:   TypeError("'int' object is not iterable")
|     exc arg 0: "'int' object is not iterable"
|
| Traceback (most recent call last):
~   File ".+/pithy/utest/__init__.py", line 106, in utest_seq
|     ret = list(ret_seq)
|           ^^^^^^^^^^^^^
| TypeError: 'int' object is not iterable
|
|
| ./fail.py:18: utest failure: range
|   arg 0 = 1
|   expected exception: Exception('expected')
|   returned sequence: [0]
|
|
| ./fail.py:19: utest failure: <lambda>
|   expected exception: Exception('expected')
|   raised exception:   TypeError("'int' object is not iterable")
|     exc arg 0: "'int' object is not iterable"
|
| Traceback (most recent call last):
~   File ".+/pithy/utest/__init__.py", line 128, in utest_seq_exc
|     ret = list(ret_seq)
|           ^^^^^^^^^^^^^
| TypeError: 'int' object is not iterable
|
|
| ./fail.py:26: utest failure: yield_then_raise
|   arg 0 = 1
|   expected exception: Exception('expected')
|   raised exception:   Exception('unexpected')
|     exc arg 0: 'unexpected'
|
| Traceback (most recent call last):
~   File ".+/pithy/utest/__init__.py", line 128, in utest_seq_exc
|     ret = list(ret_seq)
|           ^^^^^^^^^^^^^
|   File "./fail.py", line 24, in yield_then_raise
|     raise Exception('unexpected')
| Exception: unexpected
|
|
| ./fail.py:29: utest failure: 'utest_val fail test'
|   expected value: True
|   returned value: False
|
|
| ./fail.py:32: utest failure: add
|   arg 0 = 1
|   arg 1 = 2
|   expected value: 0
|   returned value: 3
|
|
| ./fail.py:32: utest failure: add
|   arg 0 = 2
|   arg 1 = 1
|   expected value: 0
|   returned value: 3
|
|
| ./fail.py:33: utest failure: add
|   arg 0 = 'a'
|   arg 1 = 'a'
|   expected exception: Exception('expected')
|   raised exception:   ValueError("invalid literal for int() with base 10: 'a'")
|     exc arg 0: "invalid literal for int() with base 10: 'a'"
|
| Traceback (most recent call last):
~   File ".+/pithy/utest/__init__.py", line 81, in utest_exc
|     try: ret = fn(*args, **kwargs)
|                ^^^^^^^^^^^^^^^^^^^
|   File "./fail.py", line 31, in add
|     def add(a, b): return int(a) + int(b)
|                           ^^^^^^
| ValueError: invalid literal for int() with base 10: 'a'
|
|
| ./fail.py:33: utest failure: add
|   arg 0 = 'a'
|   arg 1 = 'a'
|   expected exception: Exception('expected')
|   raised exception:   ValueError("invalid literal for int() with base 10: 'a'")
|     exc arg 0: "invalid literal for int() with base 10: 'a'"
|
| Traceback (most recent call last):
~   File ".+/pithy/utest/__init__.py", line 81, in utest_exc
|     try: ret = fn(*args, **kwargs)
|                ^^^^^^^^^^^^^^^^^^^
|   File "./fail.py", line 31, in add
|     def add(a, b): return int(a) + int(b)
|                           ^^^^^^
| ValueError: invalid literal for int() with base 10: 'a'
|
|
| ./fail.py:36: utest failure: a_plus_bc
|   arg 0 = 1
|   arg 1 = 2
|   arg 2 = 3
|   expected value: 0
|   returned value: 7
|
|
| ./fail.py:36: utest failure: a_plus_bc
|   arg 0 = 1
|   arg 1 = 3
|   arg 2 = 2
|   expected value: 0
|   returned value: 7
|
|
| ./fail.py:37: utest failure: a_plus_bc
|   arg 0 = 1
|   arg 1 = 'a'
|   arg 2 = 'a'
|   expected exception: Exception('expected')
|   raised exception:   ValueError("invalid literal for int() with base 10: 'a'")
|     exc arg 0: "invalid literal for int() with base 10: 'a'"
|
| Traceback (most recent call last):
~   File ".+/pithy/utest/__init__.py", line 81, in utest_exc
|     try: ret = fn(*args, **kwargs)
|                ^^^^^^^^^^^^^^^^^^^
|   File "./fail.py", line 35, in a_plus_bc
|     def a_plus_bc(a, b, c): return int(a) + int(b) * int(c)
|                                             ^^^^^^
| ValueError: invalid literal for int() with base 10: 'a'
|
|
| ./fail.py:37: utest failure: a_plus_bc
|   arg 0 = 1
|   arg 1 = 'a'
|   arg 2 = 'a'
|   expected exception: Exception('expected')
|   raised exception:   ValueError("invalid literal for int() with base 10: 'a'")
|     exc arg 0: "invalid literal for int() with base 10: 'a'"
|
| Traceback (most recent call last):
~   File ".+/pithy/utest/__init__.py", line 81, in utest_exc
|     try: ret = fn(*args, **kwargs)
|                ^^^^^^^^^^^^^^^^^^^
|   File "./fail.py", line 35, in a_plus_bc
|     def a_plus_bc(a, b, c): return int(a) + int(b) * int(c)
|                                             ^^^^^^
| ValueError: invalid literal for int() with base 10: 'a'
|
|
| utest ran: 19; failed: 19
