/* Dedicated to the public domain under CC0: https://creativecommons.org/publicdomain/zero/1.0/. */

/* Chart layout. */
figure.chart {
  display: flex;
  flex-direction: column;
  grid-template-rows: min-content auto min-content;
}

figure.chart.categorical-numerical {
  --bar-width: max(1em - 1px, calc(((100% - 1px) / var(--nx)) - 1px));
  --vis-width: max(calc(100%), calc(1em * var(--nx) + 1px));
}

figure.chart > figcaption {
}
figure.chart > .legend {
}
figure.chart > .vis-grid {
  flex-grow: 1; /* Expand to fill remaining space of chart. */
  /* This 2x2 grid allocates minimum space for the gutter/tick areas,
  and devotes the remaining space to the data visualization area. */
  display: grid;
  grid-template-columns: min-content auto; /* Left gutter, vis. */
  grid-template-rows: auto min-content; /* vis, bottom gutter. */
  grid-column-gap: 0px;
  grid-row-gap: 0px;
}

/* Quadrant containers. */
figure.chart .ticks.y { /* The y-axis tick marks on the left. */
  grid-area: 1 / 1 / 2 / 2; /* row-start / column-start / row-end / column-end */
}
figure.chart .vis-scroll { /* The data visualization scolling container. */
  grid-area: 1 / 2 / 2 / 3;
  min-width: 4em;
  min-height: 1em;
}
figure.chart .origin { /* The small square at the lower-left origin. */
  grid-area: 2 / 1 / 3 / 2;
}
figure.chart .ticks-x-scroll { /* The x-axis tick marks on the bottom. */
  grid-area: 2 / 2 / 3 / 3;
}

/* X-axis scrolling. Y-axis scrolling is unnecessary and prevents the tick text from overflowing. */
figure.chart :is(.vis-scroll, .ticks-x-scroll) {
  overflow-x: auto;
}

@supports(scrollbar-width:none) {
  figure.chart :is(.vis-scroll, .ticks-x-scroll) {
    scrollbar-width: none; /* Hide scrollbar for Firefox. */
  }
}

figure.chart :is(.vis-scroll, .ticks-x-scroll)::-webkit-scrollbar { /* Hide scrollbar for Chrome, Safari, and Opera. */
  height: 0;
  overscroll-behavior: contain;
}

/* Quadrant scroll content sizing. */
figure.chart :is(.vis, .ticks.x) {
  min-width: 100%;
  width: 100%;
}
figure.chart :is(.vis, .ticks.y) {
  min-height: 100%;
  height: 100%;
}

/* Tick gutters. */
figure.chart .ticks {
  position: relative;
}

figure.chart .ticks > div {
  font-size: 1em;
  line-height: 1.15em; /* TEMP: 1.15em appears to be the safari default.*/
}

figure.chart .ticks > div > span {
  display: inline-block;
}
figure.chart .ticks > div > span.label {
  vertical-align: top;
}

figure.chart .ticks > div > span.tick {
  vertical-align: top;
}

figure.chart .ticks.x > div > span.label {
  transform-origin: center left;
  transform: rotate(45deg);
  position: absolute;
}
figure.chart .ticks.x > div > span.tick {
  position: absolute;
}

figure.chart .ticks.y > div > span.label {
  /* We a use a child span to hold the text.
  Because the parent div has zero height, the text hangs below the specified vertical position.
  The child span allows us to transform the text and center it around the specified position. */
  transform: translateY(-50%);
}
figure.chart .ticks.y > div > span.tick {
  vertical-align: top;
  transform: translateY(-50%); /* Half pixel translation up. TODO: only on retina? */
}


/* The x-axis tick mark gutter on the bottom. */
figure.chart .ticks.x {
  width: var(--vis-width);
  height: 2em; /* TEMP. */
  overflow-x: hidden; /* Prevents the tick text from adding weird trailing space on the right side. */
}
figure.chart .ticks.x > div { /*TODO: categorical-numerical. */
  position: absolute;
  left: calc(1px + var(--bar-width) * 0.5 +  var(--i) * max(1em, (100% - 1px) / var(--nx)));
}

/*
The y-axis tick mark gutter on the left.
Y-axis tick marks positioning trick:
We use relative positioning so that the tick elements participate in document layout and influence the sizes of the left gutter.
We use a height of zero so that the CSS variable can position the tick mark exactly,
without having to account for the sizes stacking up.
If we instead try to use absolute positioning, then the tick text and mark do not affect the gutter width.
Because of the zero size trick, we use a child span to hold the text.
The parent div has zero height, so the text hangs below the specified vertical position.
The child span allows us to transform the text and center it around the specified position.
*/
figure.chart .ticks.y {
  /* TODO: negative padding and compensation so that the start and end tick text does not clip, but stays aligned. */
}
figure.chart .ticks.y > div {
  position: relative;
  height: 0;
  top: calc(100% * calc(1 - var(--v)));
  white-space: nowrap;
  vertical-align: middle;
}


figure.chart .vis { /* The data visualization area. */
  position: relative;
}
figure.chart .vis > .series {
  position: absolute;
  width: 100%;
  height: 100%;
}

figure.chart.categorical-numerical .vis > .series.bar {
  width: var(--vis-width);
}

figure.chart.categorical-numerical .vis > .series.bar > div {
  position: absolute;
  min-width: 4px;
  height: calc(100% * calc(var(--v)));
  width: max(1em - 1px, calc(((100% - 1px) / var(--nx)) - 1px));
  left: calc(1px + var(--i) * max(1em, (100% - 1px) / var(--nx)));
  bottom: 0;
  background-color: var(--series-color);
  border-width: var(--chart-bar-border-width);
  border-style: solid;
}

.swatch {
  display: inline-block;
  background-color: var(--series-color);
}

/* User style. */
figure.chart * {
  box-sizing: border-box;
}
figure.chart {
  position: relative;
  width: 100%;
  height: 100%;
  margin: 0;
  --chart-bar-border-width: 1px;
  --series-color: gray; /* Default, can be overridden per series. */
}
figure.chart > figcaption {
  padding: 0.5em 0;
  background-color: #8D6;
}
figure.chart > .legend {
  padding: 0.5em 0;
  background-color: lightgray;
}
figure.chart .vis-grid {
  background-color: yellow;
}
figure.chart .origin {
  background-color: #DDF;
}
figure.chart .vis-scroll {
  position: relative;
  height: auto;
}
figure.chart .ticks.x {
  background-color: lightgreen;
}
figure.chart .ticks.x > div > span.label {
  /*border: 1px solid black;*/
}
figure.chart .ticks span.label {
  font-size: 0.5em;
}
figure.chart .ticks > div > span.tick {
  background-color: black;
}
figure.chart .ticks.y {
  background-color: #8DD;
}
figure.chart .ticks.y > div {
  text-align: right;
}
figure.chart .ticks > div > span.tick {
  background-color: black;
}
figure.chart .ticks.x > div > span.tick {
  height: 0.25em;
  width: 1px;
}
figure.chart .ticks.y > div > span.tick {
  margin-left: 0.125em;
  width: 0.25em;
  height: 1px;
}

figure.chart .series {
  column-gap: 4px;
}
figure.chart .series > div {
    border-color: black;
}

figure.chart .Series0 {
  --series-color: coral;
}
figure.chart .Series1 {
  --series-color: lightblue;
}
.swatch {
  width: 1em;
  height: 1em;
  margin-right: 0.5em;
  vertical-align: middle;
  border-radius: 0.25em;
}
