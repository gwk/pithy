/* Dedicated to the public domain under CC0: https://creativecommons.org/publicdomain/zero/1.0/. */

@import url('https://fonts.googleapis.com/css2?family=Noto+Emoji&display=block');


/* Reset. */

*, *::before, *::after { box-sizing: border-box; } /* Use the modern box-sizing model. */

* { margin: 0; } /* Remove all default margins. */

html, body { height: 100%; } /* Allow percentage-based heights in the application. See: https://www.joshwcomeau.com/css/custom-css-reset/#digit-percentage-based-heights. */

html:focus-within { scroll-behavior: smooth; }

body { min-height: 100vh; text-rendering: optimizeSpeed; line-height: 1.5; }

p, h1, h2, h3, h4, h5, h6 { overflow-wrap: break-word; } /* Avoid text overflows. */

img, picture, video, canvas, svg { display: block; max-width: 100%; } /* Improve media defaults. */

ul[role='list'], ol[role='list'] { list-style: none; } /* Remove list styles on ul, ol elements with a list role. */

a:not([class]) { text-decoration-skip-ink: auto; } /* A elements that don't have a class get default styles. */

/* Remove all animations, transitions and smooth scroll for people that prefer not to see them. */
@media (prefers-reduced-motion: reduce) {
  html:focus-within {
   scroll-behavior: auto;
  }

  *, *::before, *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}

/* Root vars. */
:root {
  --cw: 64rem; /* Content width. */
  --cp: 0.5rem; /* Content padding. */;
  --scrollbar-width: 0px; /* Updated by javascript. */
  --vw-sb: calc(100vw - var(--scrollbar-width));

  --clr-table-even: #FFF;
  --clr-table-odd: #EEE;
}


/* Page layout. */

* { position: relative; }

html { overflow-y: scroll; } /* Prevents centered layout from jittering between when scroll bar appears. */

body {
  display: flex;
  flex-direction: column;
  width: 100%;
}

.bfull {
  width: 100%;
  padding: 0 var(--cp);
}

.bfull-bleed-bg {
  width: 100%;
  padding: 0 max(var(--cp), calc(var(--cp) + 50vw - 0.5*var(--cw)));
}

.bpage {
  width: min(100%, var(--cw));
  padding: 0 var(--cp);
  align-self: center;
}

body > * { /* By default, all direct children of body are bpage. */
  width: min(100%, var(--cw));
  padding: 0 var(--cp);
  align-self: center;
}

.wc { width: var(--cw); }

.pc {
  padding-left:var(--cp);
  padding-right:var(--cp);
}


/* Utility classes. */

.w100 { width: 100%; }
.h100 { height: 100%; }
.w-isodate { width: 11ch; }
.w-isodatetime-m { width: 17ch; }
.w-isodatetime-s { width: 20ch; }

.bold { font-weight: bold; }

.block { display: block; }
.inline { display: inline; }
.inline-block { display: inline-block; }

.mv1em { margin-top: 1em; margin-bottom: 1em; }

.o50 { opacity: 0.5; }

.table-auto { table-layout: auto; }
.table-fixed { table-layout: fixed; }

.text-left { text-align: left; }
.text-center { text-align: center; }
.text-right { text-align: right; }
.text-justify { text-align: justify; }
.text-start { text-align: start; }
.text-end { text-align: end; }


/* Forms. */

form.grid {
  width: 100%;
  margin: 1em 0;
  display: grid;
  grid-template-columns: min-content 1fr;
  gap: 1em;
}

form.inline {
  display: flex;
  flex-direction: row;
  gap: 1ch;
}

.input-labels-inline { /* An inline span containing input/label pairs. The labels contain the inputs, followed by label text. */
  display: flex;
  flex-direction: row;
  gap: 1.5ch;
}

label.input-label, .input-labels-inline > label { /* A label that wraps an input (e.g. radio or checkbox) followed by the label text. */
  display: flex;
  flex-direction: row;
  white-space: nowrap;
}

:is(label.input-label, .input-labels-inline > label) > input:first-child {
  margin-right: 0.5ch; /* Add space between the input and its label text. */
}

:is(label.input-label, .input-labels-inline > label) > input:first-child:where([type='checkbox'], [type='radio']) {
  align-self: center;
}


/* Tables. */

table {
  table-layout: fixed;
  margin: 1rem 0;
  border-style: solid;
  border-width: 1px;
  border-color: #AAA;
  border-spacing: 1rem 0.5rem;
}

table caption {
  font-weight: bold;
  text-align: left;
  caption-side: top;
}

th, td {
  text-align: left;
  vertical-align: top;
}

table.dense {
  border-collapse: collapse;
}

table.dense :is(td, th) {
  border-color: #AAA;
  border-style: solid;
  border-width: 1px;
  padding: 0.25rem 0.5rem;
}

table.dense tbody tr:nth-child(even) {
  background-color: var(--clr-table-even);
}

table.dense tbody tr:nth-child(odd) {
  background-color: var(--clr-table-odd);
}


/* Grids. */

.kv-grid-min {
  display: grid;
  grid-template-columns: min-content 1fr;
  gap: 0.5em;
}

.kv-grid-min > :nth-child(odd) {
  white-space: nowrap;
}

.kv-grid-max {
  display: grid;
  grid-template-columns: max-content 1fr;
  gap: 0.5em;
}


/* HTMX interaction indicators. */

.block-emoji-icon, .inline-emoji-icon {
  font-family: 'Noto Emoji';
  text-align: center;
}

.block-emoji-icon {
  display: block;
  margin: 1rem 0;
  min-width: 1.5rem;
}

.inline-emoji-icon {
  display: inline-block;
  margin: 0 0.5rem;
}


/* Emoji icons. */

.icon {
  font-family: 'Noto Emoji';
}
a.icon {
  color: #000;
  text-decoration: none;
}
a.icon:active {
  color: #000;
  text-decoration: none;
}
a.icon:hover {
  color: #222;
  text-decoration: none;
}
a.icon:visited {
  color: rgb(0, 0, 0);
  text-decoration: none;
}


/* Htmx emoji clock spinner. */

.with-spinner-after::after, .with-spinner-before::before {
  font-family: 'Noto Emoji';
  opacity: 0;
  transition: opacity 250ms ease-in;
  text-align: center;
  display: inline-block;
  /* TODO: figure out how to align spinner with rest of input-label pair. */
}

.with-spinner-before::before {
  transform: translateX(-3ch);
}

.with-spinner-after.htmx-request::after, .with-spinner-before.htmx-request::before {
  /* The htmx-request class is added to the requesting element or specified hx-indicator element while the request is ongoing. */
  opacity: 1;
  content: '🕛';

  animation-name: emoji-clock;
  animation-duration: 3s;
  animation-iteration-count: infinite;
}

@keyframes emoji-clock {
  00.000% { content: '🕛'; }
  08.333% { content: '🕐'; }
  16.667% { content: '🕑'; }
  25.000% { content: '🕒'; }
  33.333% { content: '🕓'; }
  41.667% { content: '🕔'; }
  50.000% { content: '🕕'; }
  58.333% { content: '🕖'; }
  66.667% { content: '🕗'; }
  75.000% { content: '🕘'; }
  83.333% { content: '🕙'; }
  91.667% { content: '🕚'; }
  100.00% { content: '🕛'; }
}


/* SquelchApp. */

#squelch_app form {
  margin: 1em 0;
}

#squelch_app form #columns {
  display: flex;
  flex-wrap: wrap;
  column-gap: 1em;
}

#squelch_app form label.en-col {
  white-space: nowrap;
}

#squelch_app form label.en-col input {
  margin-right: 0.5em;
}

#squelch_app .detail {
  margin-bottom: 1em;
}

#squelch_app .pagination-control span.msg {
  margin-left: 0.5em;
}

#squelch_app #results {
  width: 100%;
  overflow-x: scroll;
}

#squelch_app #results > table {
  table-layout: auto;
}

#squelch_app #results > table th {
  resize: horizontal;
  overflow: clip;
}

#squelch_app .error {
  color: #800;
}

#squelch_app .null {
  color: #888;
}

#squelch_app .unjoined {
  color: #840;
}
