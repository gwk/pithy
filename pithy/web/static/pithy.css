/* Dedicated to the public domain under CC0: https://creativecommons.org/publicdomain/zero/1.0/. */

@import url('https://fonts.googleapis.com/css2?family=Noto+Emoji&display=block');


/* Reset. */

*, *::before, *::after { box-sizing: border-box; } /* Use the modern box-sizing model. */

* { margin: 0; } /* Remove all default margins. */

html, body { height: 100%; } /* Allow percentage-based heights in the application. See: https://www.joshwcomeau.com/css/custom-css-reset/#digit-percentage-based-heights. */

html:focus-within { scroll-behavior: smooth; }

body { min-height: 100vh; text-rendering: optimizeSpeed; line-height: 1.5; }

p, h1, h2, h3, h4, h5, h6 { overflow-wrap: break-word; } /* Avoid text overflows. */

img, picture, video, canvas, svg { display: block; max-width: 100%; } /* Improve media defaults. */

ul[role='list'], ol[role='list'] { list-style: none; } /* Remove list styles on ul, ol elements with a list role. */

a:not([class]) { text-decoration-skip-ink: auto; } /* A elements that do not have a class get default styles. */

/* Remove all animations, transitions and smooth scroll for people that prefer not to see them. */
@media (prefers-reduced-motion: reduce) {
  html:focus-within {
   scroll-behavior: auto;
  }

  *, *::before, *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}

/* Root vars. */
:root {
  --page-width: 64rem;
  --page-padding: 0.5rem;
  --scrollbar-width: 0px; /* Updated by pithy.js. */
  --vw-sb: calc(100vw - var(--scrollbar-width));

  --tr-even-background-color: #FFF;
  --tr-odd-background-color: #EEE;
}


/* Layout.
"page" refers to setting a fixed width content area for body child elements.
"full" refers to full width body child elements.
*/

* { position: relative; }

html { overflow-y: scroll; } /* Prevents centered layout from jittering when scroll bar appears. */

body {
  display: flex;
  flex-direction: column;
  width: 100%;
}

.body-child-full {
  width: 100%;
  padding-left: var(--page-padding);
  padding-right: var(--page-padding);
}

.body-child-page-bleed-bg {
  width: 100%;
  padding-left: max(var(--page-padding), calc(var(--page-padding) + 50vw - 0.5*var(--page-width)));
  padding-right: max(var(--page-padding), calc(var(--page-padding) + 50vw - 0.5*var(--page-width)));
}

.body-child-page {
  width: min(100%, var(--page-width));
  padding-left: var(--page-padding);
  padding-right: var(--page-padding);
  align-self: center;
}

.page-width { width: var(--page-width); }

.page-padding {
  padding-left:var(--page-padding);
  padding-right:var(--page-padding);
}


/* Utility classes. */

.w100 { width: 100%; }
.h100 { height: 100%; }
.w-isodate { width: 11ch; }
.w-isodatetime-m { width: 17ch; }
.w-isodatetime-s { width: 20ch; }

.bold { font-weight: bold; }
.weight-500 { font-weight: 500; }
.weight-normal { font-weight: normal; }

.hidden { display: none; }
.block { display: block; }
.inline { display: inline; }
.inline-block { display: inline-block; }

.flex-row { display: flex; flex-direction: row; }
.flex-col { display: flex; flex-direction: column; }

.gap-1ch { gap: 1ch; }
.gap-1em { gap: 1em; }
.gap-05em { gap: 0.5em; }

.mv-05em { margin-top: 0.5em; margin-bottom: 0.5em; }
.mv-1em { margin-top: 1em; margin-bottom: 1em; }

.nowrap { white-space: nowrap; }

.o0 { opacity: 0; }
.o50 { opacity: 0.5; }

.overflow-x-scroll { overflow-x: scroll; }

.table-auto { table-layout: auto; }
.table-fixed { table-layout: fixed; }

.text-left { text-align: left; }
.text-center { text-align: center; }
.text-right { text-align: right; }
.text-justify { text-align: justify; }
.text-start { text-align: start; }
.text-end { text-align: end; }

.vertical-baseline { vertical-align: baseline; }
.vertical-top { vertical-align: top; }
.vertical-middle { vertical-align: middle; }
.vertical-bottom { vertical-align: bottom; }
.vertical-sub { vertical-align: sub; }
.vertical-text-top { vertical-align: text-top; }

.align-items-center { align-items: center; }
.align-items-baseline { align-items: baseline; }

.font-large { font-size: large; }
.font-small { font-size: small; }

.list-style-none { list-style: none; }
.list-style-inside { list-style-position: inside; }
.list-style-outside { list-style-position: outside; }

.error-red { color: #800; }

.num { text-align: right; }

/* Buttons. */

button.dangerous {
  background-color: #cc0000;
  border: 1px solid #880000;
  color: white;
  font-weight: 600;
  transition: background-color 0.2s;
}

button.dangerous:hover {
  background-color: #bb0000;
}

button.dangerous:active {
  background-color: #990000;
}


/* Details, Summary. */
/* NOTE: summary disclosure styling works differently between Chrome and Safari. */
/* First, hide the default disclosure marker. */
summary { list-style-type: none; } /* Chrome. */
summary::-webkit-details-marker { display: none; } /* Safari. */

/* Use Black Right-pointing Small Triangle, Black Down-pointing Small Triangle. */
details summary::before {
  content: "▸";
  display: inline-block;
  position: relative;
  width: 1.5ch;
}

details[open] summary::before { content: "▾"; }

details summary.disclosure-flush::before {
  font-size: 0.75em;
  position: absolute;
  left: -1.25ch;
  vertical-align: baseline;
  transform: translateY(0.125em);
}

/* Links. */

:where(A.button, A.button:visited, A.button:hover, A.button:active) {
  color: #000;
  text-decoration: none;
}

:where(a.button, button) {
  appearance: none;
  background-color: #FFF;
  border: none;
  border-radius: 3px;
  box-shadow: 0 0.5px 1.5px #999;
  display: inline-block;
  font-size: 0.75rem;
  font-weight: 400;
  line-height: inherit;
  padding: 0 1ch;
  vertical-align: baseline;
}

:where(a.button, button):active {
  color: #000;
  background-color: #F0F0F0;
}


/* Forms. */

form.grid {
  width: 100%;
  margin: 1em 0;
  display: grid;
  grid-template-columns: max-content 1fr;
  gap: 1em;
}

form.inline {
  display: flex;
  flex-direction: row;
  gap: 1ch;
}

.input-labels { /* A div containing input/label pairs. The labels contain the inputs, followed by label text. */
  display: flex;
  flex-direction: column;
}

.input-labels-inline { /* An inline span containing input/label pairs. The labels contain the inputs, followed by label text. */
  display: flex;
  flex-direction: row;
  gap: 1.5ch;
}

label.input-label, .input-labels label, .input-labels-inline label { /* A label that wraps an input (e.g. radio or checkbox) followed by the label text. */
  display: flex;
  flex-direction: row;
  white-space: nowrap;
  align-items: center;
}

:is(label.input-label, .input-labels label, .input-labels-inline label) > input:first-child {
  margin-right: 0.5ch; /* Add space between the input and its label text. */
}

input[type='date'] {
  border: none;
  box-shadow: 0 0.5px 1.5px #999;
  border-radius: 2px;
  line-height: 1;
}

html.chrome input[type='date'] {
  min-width: 7rem; /* Otherwise the chrome calendar icon gets clipped. */
}

html.safari input[type='date']::after {
  content: '🗓️';
  padding: 0.25em;
  font-family: 'Noto Emoji';
}

html.chrome input[type='text'] {
  border: none;
  box-shadow: 0 0.5px 1.5px #999;
}


html.chrome select { /* Emulates the Safari default style. */
  border-radius: 4px;
  border: none;
  box-shadow: 0 0.5px 1.5px #999;
}

/* Spans. */
span.controls {
  display: flex;
  flex-direction: row;
  gap: 1em;
  align-items: center;
}

/* Tables. */

table {
  margin: 1rem 0;
  border-style: solid;
  border-width: 1px;
  border-color: #AAA;
  border-collapse: collapse;
  text-align: left;
}

table caption {
  font-weight: bold;
  text-align: left;
  caption-side: top;
}

tbody {
  vertical-align: top; /* Chrome/Safari UA style sets this to middle; tr/th/td are set to inherit. */
}

th, td {
  padding: 0.25rem 0.5rem;
  border-color: #AAA;
  border-style: solid;
  border-width: 1px;
}

th.datetime, td.datetime {
  white-space: nowrap;
}

table tbody tr:nth-child(even) {
  background-color: var(--tr-even-background-color);
}

table tbody tr:nth-child(odd) {
  background-color: var(--tr-odd-background-color);
}


/* Grids. */

.kv-grid-min {
  display: grid;
  grid-template-columns: min-content 1fr;
  gap: 0.5em;
}

.kv-grid-min > :nth-child(odd) {
  white-space: nowrap;
}

.kv-grid-max {
  display: grid;
  grid-template-columns: max-content 1fr;
  gap: 0.5em;
}


/* HTMX interaction indicators. */

.block-emoji-icon, .inline-emoji-icon {
  font-family: 'Noto Emoji';
  text-align: center;
}

.block-emoji-icon {
  display: block;
  margin: 1rem 0;
  min-width: 1.5rem;
}

.inline-emoji-icon {
  display: inline-block;
  margin: 0 0.5rem;
}


/* Emoji icons. */

.icon {
  font-family: 'Noto Emoji';
}

a.icon {
  color: #000;
  text-decoration: none;
  /* The following are overridden by following rule for links with any destination attr. */
  cursor: default;
  opacity: 0.5;
}
a.icon:is([href], [hx-delete], [hx-get], [hx-patch], [hx-post], [hx-put]) {
  cursor: pointer;
  opacity: 1;
}

a.icon:active {
  color: #000;
  text-decoration: none;
}
a.icon:hover {
  color: #222;
  text-decoration: none;
}
a.icon:visited {
  color: rgb(0, 0, 0);
  text-decoration: none;
}

/* Htmx request disables events. */
.request-disables-clicks.htmx-request {
  pointer-events: none;
}

/* Htmx pulsating indicator. */

.pulse-indicator {
  opacity: 1;
}

.pulse-indicator.htmx-request {
  animation-name: pulse-opacity;
  animation-duration: 1s;
  animation-iteration-count: infinite;
}

@keyframes pulse-opacity {
  0% { opacity: 1; }
  50% { opacity: 0.5; }
  100% { opacity: 1; }
}

.stripe-indicator {
  min-height: 100%;
  background-image: none;
  background-size: 1rem 1rem;
}

.stripe-indicator.htmx-request {
  background-image: repeating-linear-gradient(135deg,
    #FFF 0rem,
    #FFF 0.3535rem,
    #EEE 0.3535rem,
    #EEE 0.7071rem
  );
  animation: stripe-indicator 1s infinite linear;
}

@keyframes stripe-indicator {
  0% { background-position: 0 0; }
  100% { background-position: 1rem 0; }
}


/* Htmx emoji clock indicator. */

.with-spinner-after::after, .with-spinner-before::before {
  display: inline-block;
  font-family: 'Noto Emoji', sans-serif;
  font-optical-sizing: auto;
  font-weight: 400;
  font-style: normal;
  opacity: 0;
  content: '\00a0';
  transition: opacity 250ms ease-in;
  text-align: center;
  vertical-align: baseline;
  font-size: 90%;
  /* TODO: figure out how to better align spinner with rest of input-label pair. */
}

.with-spinner-before::before {
  transform: translateX(-2.5ch);
}

.with-spinner-after.htmx-request::after, .with-spinner-before.htmx-request::before {
  /* The htmx-request class is added to the requesting element or specified hx-indicator element while the request is ongoing. */
  opacity: 1;
  content: '🕛';

  animation-name: emoji-clock;
  animation-duration: 3s;
  animation-iteration-count: infinite;
}

@keyframes emoji-clock {
  00.000% { content: '🕛'; }
  08.333% { content: '🕐'; }
  16.667% { content: '🕑'; }
  25.000% { content: '🕒'; }
  33.333% { content: '🕓'; }
  41.667% { content: '🕔'; }
  50.000% { content: '🕕'; }
  58.333% { content: '🕖'; }
  66.667% { content: '🕗'; }
  75.000% { content: '🕘'; }
  83.333% { content: '🕙'; }
  91.667% { content: '🕚'; }
  100.00% { content: '🕛'; }
}


/* Modal panes. */

.modal { /* Outer modal div that covers the entire screen with a translucent background. */
  position: fixed;
  z-index: 1;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  background-color: rgba(128, 128, 128, 0.5);
}

.modal > .pane {
  min-width: 8rem;
  min-height: 4rem;
  max-width: 90%;
  max-height: 90%;
  overflow: auto;
  padding: 2em;
  border: 1px solid #888;
  border-radius: 0.5em;
  background-color: #EEE;
}

.modal > .pane.error {
  border: 2px solid #880000;
  font-weight: 600;
}


/* pagination-control. */

.pagination-control span.msg {
  margin-left: 0.5em;
}


/* SquelchApp. */

.squelch form {
  margin: 1em 0;
}

.squelch form #columns {
  display: flex;
  flex-wrap: wrap;
  column-gap: 1em;
}

.squelch form label.en-col {
  white-space: nowrap;
}

.squelch form label.en-col input {
  margin-right: 0.5em;
}

.squelch .detail {
  margin-bottom: 1em;
}

.squelch #results {
  width: 100%;
  overflow-x: scroll;
}

.squelch #results > table {
  table-layout: auto;
}

.squelch #results > table th {
  resize: horizontal;
  overflow: clip;
}

.squelch #results > table td {
  max-width: 95vw;
}

.squelch .error {
  color: #800;
}

.squelch .null {
  color: #888;
}

.squelch .empty {
  color: #8A8;
}

.squelch .unjoined {
  color: #840;
}
